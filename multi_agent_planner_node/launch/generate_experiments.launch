<launch>
  <!--<node name="map_server" pkg="map_server" type="map_server" args="$(find multi_agent_planner_node)/maps/freezer.yaml" />-->
  <node name="octomap_server" pkg="octomap_server" type="octomap_server_node">
    <param name="resolution" value="0.02" />
    <param name="sensor_model/range" value="4.0" />

    <param name="sensor_model/hit" value= "0.8" />
    <param name="sensor_model/miss" value= "0.31" />
    <param name="sensor_model/min" value= "0.12" />
    <param name="sensor_model/max" value= "0.95" />

    <param name="min_z_range" value="0.05" />
    <param name="max_z_range" value="1.8" />
    <param name="min_x_size" value="25.0" />
    <param name="min_y_size" value="25.0" />

    <param name="pointcloud_min_z" value="0.10"/>
    <param name="pointcloud_max_z" value="1.80"/>
    <param name="filter_ground" value="true"/>
    <param name="occupancy_min_z" value="0.05"/>
    <param name="occupancy_max_z" value="2.0"/>
    <param name="base_frame_id" value="map" />
    <remap from="cloud_in" to="pcl_environment" />
  </node>

  <node pkg="multi_agent_planner_node" type="stlToOctomap"
  name="stlToOctomap" args="$(find multi_agent_planner_node)/maps/empty_map.dae" output="screen">
    <param name="randomize_environment" value="true"/>
    <param name="out_path" value="$(find multi_agent_planner_node)/experiments" />
  </node>
  
  <node pkg="multi_agent_planner_node" type="node" name="multi_agent_planner_node" output="screen" launch-prefix="gdb -ex run --args"> 
      <rosparam command="load" file="$(find multi_agent_planner_node)/config/logging_levels.yaml" />
      <rosparam command="load" file="$(find multi_agent_planner)/config/config.yaml" />
      <rosparam command="load" file="$(find multi_agent_planner)/config/swarm_config.yaml" />
      <rosparam file="$(find multi_agent_planner)/config/costmap_2d.yaml" command="load" ns="costmap_2d" />
  </node>
  <node pkg="tf" type="static_transform_publisher" name="map_to_base_broadcaster" args="0 0 0 0 0 0 map base_link 100" />

  <node pkg="multi_agent_planner_node" type="generateExperimentsNode" name="generateExperimentsNode" output="screen" />
  
</launch>
